{
  "version": 3,
  "sources": ["../../gif.js/dist/node_modules/browser-pack/_prelude.js", "../../gif.js/dist/node_modules/events/events.js", "../../gif.js/dist/src/browser.coffee", "../../gif.js/dist/src/gif.coffee"],
  "sourcesContent": ["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n", "### CoffeeScript version of the browser detection from MooTools ###\n\nua = navigator.userAgent.toLowerCase()\nplatform = navigator.platform.toLowerCase()\nUA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) or [null, 'unknown', 0]\nmode = UA[1] == 'ie' && document.documentMode\n\nbrowser =\n  name: if UA[1] is 'version' then UA[3] else UA[1]\n  version: mode or parseFloat(if UA[1] is 'opera' && UA[4] then UA[4] else UA[2])\n\n  platform:\n    name: if ua.match(/ip(?:ad|od|hone)/) then 'ios' else (ua.match(/(?:webos|android)/) or platform.match(/mac|win|linux/) or ['other'])[0]\n\nbrowser[browser.name] = true\nbrowser[browser.name + parseInt(browser.version, 10)] = true\nbrowser.platform[browser.platform.name] = true\n\nmodule.exports = browser\n", "{EventEmitter} = require 'events'\nbrowser = require './browser.coffee'\n\nclass GIF extends EventEmitter\n\n  defaults =\n    workerScript: 'gif.worker.js'\n    workers: 2\n    repeat: 0 # repeat forever, -1 = repeat once\n    background: '#fff'\n    quality: 10 # pixel sample interval, lower is better\n    width: null # size derermined from first frame if possible\n    height: null\n    transparent: null\n    debug: false\n    dither: false # see GIFEncoder.js for dithering options\n\n  frameDefaults =\n    delay: 500 # ms\n    copy: false\n\n  constructor: (options) ->\n    @running = false\n\n    @options = {}\n    @frames = []\n\n    @freeWorkers = []\n    @activeWorkers = []\n\n    @setOptions options\n    for key, value of defaults\n      @options[key] ?= value\n\n  setOption: (key, value) ->\n    @options[key] = value\n    if @_canvas? and key in ['width', 'height']\n      @_canvas[key] = value\n\n  setOptions: (options) ->\n    @setOption key, value for own key, value of options\n\n  addFrame: (image, options={}) ->\n    frame = {}\n    frame.transparent = @options.transparent\n    for key of frameDefaults\n      frame[key] = options[key] or frameDefaults[key]\n\n    # use the images width and height for options unless already set\n    @setOption 'width', image.width unless @options.width?\n    @setOption 'height', image.height unless @options.height?\n\n    if ImageData? and image instanceof ImageData\n       frame.data = image.data\n    else if (CanvasRenderingContext2D? and image instanceof CanvasRenderingContext2D) or (WebGLRenderingContext? and image instanceof WebGLRenderingContext)\n      if options.copy\n        frame.data = @getContextData image\n      else\n        frame.context = image\n    else if image.childNodes?\n      if options.copy\n        frame.data = @getImageData image\n      else\n        frame.image = image\n    else\n      throw new Error 'Invalid image'\n\n    @frames.push frame\n\n  render: ->\n    throw new Error 'Already running' if @running\n\n    if not @options.width? or not @options.height?\n      throw new Error 'Width and height must be set prior to rendering'\n\n    @running = true\n    @nextFrame = 0\n    @finishedFrames = 0\n\n    @imageParts = (null for i in [0...@frames.length])\n    numWorkers = @spawnWorkers()\n    # we need to wait for the palette\n    if @options.globalPalette == true\n      @renderNextFrame()\n    else\n      @renderNextFrame() for i in [0...numWorkers]\n\n    @emit 'start'\n    @emit 'progress', 0\n\n  abort: ->\n    loop\n      worker = @activeWorkers.shift()\n      break unless worker?\n      @log 'killing active worker'\n      worker.terminate()\n    @running = false\n    @emit 'abort'\n\n  # private\n\n  spawnWorkers: ->\n    numWorkers = Math.min(@options.workers, @frames.length)\n    [@freeWorkers.length...numWorkers].forEach (i) =>\n      @log \"spawning worker #{ i }\"\n      worker = new Worker @options.workerScript\n      worker.onmessage = (event) =>\n        @activeWorkers.splice @activeWorkers.indexOf(worker), 1\n        @freeWorkers.push worker\n        @frameFinished event.data\n      @freeWorkers.push worker\n    return numWorkers\n\n  frameFinished: (frame) ->\n    @log \"frame #{ frame.index } finished - #{ @activeWorkers.length } active\"\n    @finishedFrames++\n    @emit 'progress', @finishedFrames / @frames.length\n    @imageParts[frame.index] = frame\n    # remember calculated palette, spawn the rest of the workers\n    if @options.globalPalette == true\n      @options.globalPalette = frame.globalPalette\n      @log 'global palette analyzed'\n      @renderNextFrame() for i in [1...@freeWorkers.length] if @frames.length > 2\n    if null in @imageParts\n      @renderNextFrame()\n    else\n      @finishRendering()\n\n  finishRendering: ->\n    len = 0\n    for frame in @imageParts\n      len += (frame.data.length - 1) * frame.pageSize + frame.cursor\n    len += frame.pageSize - frame.cursor\n    @log \"rendering finished - filesize #{ Math.round(len / 1000) }kb\"\n    data = new Uint8Array len\n    offset = 0\n    for frame in @imageParts\n      for page, i in frame.data\n        data.set page, offset\n        if i is frame.data.length - 1\n          offset += frame.cursor\n        else\n          offset += frame.pageSize\n\n    image = new Blob [data],\n      type: 'image/gif'\n\n    @emit 'finished', image, data\n\n  renderNextFrame: ->\n    throw new Error 'No free workers' if @freeWorkers.length is 0\n    return if @nextFrame >= @frames.length # no new frame to render\n\n    frame = @frames[@nextFrame++]\n    worker = @freeWorkers.shift()\n    task = @getTask frame\n\n    @log \"starting frame #{ task.index + 1 } of #{ @frames.length }\"\n    @activeWorkers.push worker\n    worker.postMessage task#, [task.data.buffer]\n\n  getContextData: (ctx) ->\n    return ctx.getImageData(0, 0, @options.width, @options.height).data\n\n  getImageData: (image) ->\n    if not @_canvas?\n      @_canvas = document.createElement 'canvas'\n      @_canvas.width = @options.width\n      @_canvas.height = @options.height\n\n    ctx = @_canvas.getContext '2d'\n    ctx.setFill = @options.background\n    ctx.fillRect 0, 0, @options.width, @options.height\n    ctx.drawImage image, 0, 0\n\n    return @getContextData ctx\n\n  getTask: (frame) ->\n    index = @frames.indexOf frame\n    task =\n      index: index\n      last: index is (@frames.length - 1)\n      delay: frame.delay\n      transparent: frame.transparent\n      width: @options.width\n      height: @options.height\n      quality: @options.quality\n      dither: @options.dither\n      globalPalette: @options.globalPalette\n      repeat: @options.repeat\n      canTransfer: (browser.name is 'chrome')\n\n    if frame.data?\n      task.data = frame.data\n    else if frame.context?\n      task.data = @getContextData frame.context\n    else if frame.image?\n      task.data = @getImageData frame.image\n    else\n      throw new Error 'Invalid frame'\n\n    return task\n\n  log: (args...) ->\n    return unless @options.debug\n    console.log args...\n\n\nmodule.exports = GIF\n"],
  "mappings": "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",
  "names": ["f", "exports", "module", "define", "amd", "g", "window", "global", "self", "this", "GIF", "e", "t", "n", "r", "s", "o", "u", "a", "require", "i", "Error", "code", "l", "call", "length", "1", "EventEmitter", "_events", "_maxListeners", "undefined", "prototype", "defaultMaxListeners", "setMaxListeners", "isNumber", "isNaN", "TypeError", "emit", "type", "er", "handler", "len", "args", "listeners", "error", "isObject", "arguments", "err", "context", "isUndefined", "isFunction", "Array", "slice", "apply", "addListener", "listener", "m", "newListener", "push", "warned", "console", "trace", "on", "once", "fired", "removeListener", "list", "position", "splice", "removeAllListeners", "key", "ret", "listenerCount", "evlistener", "emitter", "arg", "UA", "browser", "mode", "platform", "ua", "navigator", "userAgent", "toLowerCase", "match", "document", "documentMode", "name", "version", "parseFloat", "parseInt", "extend", "child", "parent", "hasProp", "ctor", "constructor", "__super__", "superClass", "defaults", "frameDefaults", "workerScript", "workers", "repeat", "background", "quality", "width", "height", "transparent", "debug", "dither", "delay", "copy", "options", "base", "value", "running", "frames", "freeWorkers", "activeWorkers", "setOptions", "setOption", "_canvas", "results", "addFrame", "image", "frame", "ImageData", "data", "CanvasRenderingContext2D", "WebGLRenderingContext", "getContextData", "childNodes", "getImageData", "render", "j", "numWorkers", "ref", "nextFrame", "finishedFrames", "imageParts", "spawnWorkers", "globalPalette", "renderNextFrame", "abort", "worker", "shift", "log", "terminate", "Math", "min", "forEach", "_this", "Worker", "onmessage", "event", "indexOf", "frameFinished", "index", "finishRendering", "k", "len1", "len2", "len3", "offset", "page", "ref1", "ref2", "pageSize", "cursor", "round", "Uint8Array", "set", "Blob", "task", "getTask", "postMessage", "ctx", "createElement", "getContext", "setFill", "fillRect", "drawImage", "last", "canTransfer"]
}
