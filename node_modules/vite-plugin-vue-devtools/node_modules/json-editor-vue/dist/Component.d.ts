import type { PropType } from 'vue-demi';
export type Mode = 'text' | 'tree' | 'table';
declare const _default: import("vue-demi").DefineComponent<{
    modelValue: {};
    value: {};
} & {
    mode: {
        type: PropType<Mode>;
    };
} & {
    mainMenuBar: {
        type: PropType<boolean>;
        default: undefined;
    };
    navigationBar: {
        type: PropType<boolean>;
        default: undefined;
    };
    statusBar: {
        type: PropType<boolean>;
        default: undefined;
    };
    askToFormat: {
        type: PropType<boolean>;
        default: undefined;
    };
    readOnly: {
        type: PropType<boolean>;
        default: undefined;
    };
    escapeControlCharacters: {
        type: PropType<boolean>;
        default: undefined;
    };
    escapeUnicodeCharacters: {
        type: PropType<boolean>;
        default: undefined;
    };
    flattenColumns: {
        type: PropType<boolean>;
        default: undefined;
    };
}, () => import("vue-demi").VNode<import("vue-demi").RendererNode, import("vue-demi").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue-demi").ComponentOptionsMixin, import("vue-demi").ComponentOptionsMixin, {
    [x: string]: (_payload: any) => boolean;
    'update:mode': (_payload: Mode) => boolean;
}, string, import("vue-demi").VNodeProps & import("vue-demi").AllowedComponentProps & import("vue-demi").ComponentCustomProps, Readonly<import("vue-demi").ExtractPropTypes<{
    modelValue: {};
    value: {};
} & {
    mode: {
        type: PropType<Mode>;
    };
} & {
    mainMenuBar: {
        type: PropType<boolean>;
        default: undefined;
    };
    navigationBar: {
        type: PropType<boolean>;
        default: undefined;
    };
    statusBar: {
        type: PropType<boolean>;
        default: undefined;
    };
    askToFormat: {
        type: PropType<boolean>;
        default: undefined;
    };
    readOnly: {
        type: PropType<boolean>;
        default: undefined;
    };
    escapeControlCharacters: {
        type: PropType<boolean>;
        default: undefined;
    };
    escapeUnicodeCharacters: {
        type: PropType<boolean>;
        default: undefined;
    };
    flattenColumns: {
        type: PropType<boolean>;
        default: undefined;
    };
}>> & {
    [x: `on${Capitalize<string>}`]: ((_payload: any) => any) | undefined;
}, {
    mainMenuBar: boolean;
    navigationBar: boolean;
    statusBar: boolean;
    askToFormat: boolean;
    readOnly: boolean;
    escapeControlCharacters: boolean;
    escapeUnicodeCharacters: boolean;
    flattenColumns: boolean;
}>;
export default _default;
